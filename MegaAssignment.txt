## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?
ans- Python is a popular general-purpose programming language that has a wide variety of applications.
 All sorts of technological solutions have Python at their core, from web applications, search engines, 
and games to animation software and even other programming languages.

Python is an object-oriented, high-level programming language.
 Object-oriented means this language is based around objects (such as data) rather than functions, and high-level means it's easy for humans to understand.

Q2. Why is Python called a dynamically typed language?
ans- Python is a dynamically typed language. It doesn’t know about the type of the variable until the code is run. So declaration is of no use.
 What it does is, It stores that value at some memory location and then binds that variable name to that memory container.
 And makes the contents of the container accessible through that variable name. So the data type does not matter.
 As it will get to know the type of the value at run-time.

Q3. List some pros and cons of Python programming language?
ans- pros of Python
	1.Python is easy to learn and read
	2.Python enhances productivity
	3.Python has a vast collection of libraries
	4.Python is free, open-source, and has a vibrant community
	5.Python is a portable programming language
     
    Cons of python
	1.Python has speed limitations
	2.Python is not so strong with mobile computing
	3.Python can have runtime errors
	4.Python consumes a lot of memory space
	5.Python is not easy to test


Q4. In what all domains can we use Python?
ans- We use python for the following domains:
	1.Data Science
	2.Automation
	3.Application Development
	4.AI&ML
	5.Audio & Video application
	6.Console Application
	7.Desktop GUI

Q5. What are variable and how can we declare them?
ans- Variable is containers which store values.

A variable name must start with a letter or the underscore character.
A variable name cannot start with a number.
A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ ).
Variable names are case-sensitive (name, Name and NAME are three different variables).
The reserved words(keywords) cannot be used naming the variable. 

Q6. How can we take an input from the user in Python?
ans- There are two methods:
	input ( prompt )
raw_input ( prompt )

Q7. What is the default datatype of the value that has been taken as an input using input() function?
ans- By default in python , input returns a string.

Q8. What is type casting?
ans- Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users.
 In this article, we will see the various technique for typecasting.

There can be two types of Type Casting in Python –

Implicit Type Casting
Explicit Type Casting



Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?
ans-The developer often wants a user to enter multiple values or inputs in one line. 
In C++/C user can take multiple inputs in one line using scanf but in Python user can take multiple values or inputs in one line by two methods. 

Using split() method
Using List comprehension


Q10. What are keywords?
Keywords are some predefined and reserved words in python that have special meanings. Keywords are used to define the syntax of the coding. 
example- and or for while

Q11. Can we use keywords as a variable? Support your answer with reason.
ans- We cannot use a keyword as a variable name, function name, or any other identifier. They are used to define the syntax and structure of the Python language.

Q12. What is indentation? What's the use of indentaion in Python?
ans- 	Indentation refers to the spaces at the beginning of a code line. 
Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. 
Python uses indentation to indicate a block of code.

Q13. How can we throw some output in Python?
ans- In Python, we can simply use the print() function to print output. For example,

print('Python is powerful')



Q14. What are operators in Python?
ans- Types of Python Operators
Here's a list of different types of Python operators that we will learn in this tutorial.

Arithmetic operators
Assignment Operators
Comparison Operators
Logical Operators
Bitwise Operators
Special Operators


Q15. What is difference between / and // operators?
ans- These are the short hand operators for a=a/k and a=a//k respectively. 
The difference between these two is that a/k returns the floating point value of a/k (For eg. 7/2 returns 3.5) whereas,
 if you say 7//2, then, it returns only the quotient i.e. 7//2 returns 3.

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```
ans- for i in range(4):
  print('iNeuron',end='')	

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.
ans-
x= int(input())

if (x%2)==0:
    print("even number")
else:
    print("Odd number")


Q18. What are boolean operator?

ans- The Python Boolean Type
The Python Boolean type has only two possible values:

True
False

Q19. What will the output of the following?
```
1 or 0

0 and 0

True and False and True

1 or 0 or 0
```
ans- 1. 1
	2. 0
	3. False
	4. 1

Q20. What are conditional statements in Python?
ans- Conditional Statement in Python perform different computations or actions depending on whether a specific Boolean constraint evaluates to true or false. 
Conditional statements are handled by IF statements in Python.

Q21. What is use of 'if', 'elif' and 'else' keywords?
ans- It allows us to check for multiple expressions. If the condition for if is False , it checks the condition of the next elif block and so on. 
If all the conditions are False , the body of else is executed.

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".
ans-
person = int(input())

if person>=18:
  print("I can vote")
else:
  print("I can't vote")


Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
ans-

def sum(n):
  add=0
  for i in n[:]:
    if i%2==0:
      add=add+i
  return add 

numbers = [12, 75, 150, 180, 145, 525, 50]
sum(numbers)



Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.
ans- 
a,b,c = map(int,input().split())
print(max(a,b,c))


Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]

```
ans-
a = [12, 75, 150, 180, 145, 525, 50]
b = []
for i in a:
    if i > 150:
        if i > 500:
            break
        continue
    if i % 5 == 0:
        b.append(i)
        
print(b)



Q26. What is a string? How can we declare string in Python?
ans-
A string is a sequence of characters. A character is simply a symbol. For example, the English language has 26 characters.
# defining strings in Python
# all of the following are equivalent
my_string = 'Hello'
print(my_string)

my_string = "Hello"
print(my_string)

my_string = '''Hello'''
print(my_string)

# triple quotes string can extend multiple lines
my_string = """Hello, welcome to
           the world of Python"""
print(my_string)

Q27. How can we access the string using its index?
ans-
You can access the characters in a string by referring to its index number inside square brackets [] .


Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```
ans-
print(string[9:])

Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
ans-
str1 = string[9:]
print(str1[::-1])

Q30. Resverse the string given in the above question.
ans-
print(string[::-1])

Q31. How can you delete entire string at once?
ans-
by using del keyword.

Q32. What is escape sequence?
ans-
An escape sequence is a sequence of characters that, when used inside a character or string, does not represent itself but is converted into another character or series of characters that may be difficult or impossible to express directly, like newline (\n), tab (\t), and so on.

Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```
ans-
print("'iNeuron's Big Data Course'")

Q34. What is a list in Python?
ans-
List. Lists are used to store multiple items in a single variable. Lists are one of 4 built-in data types in Python used to store collections of data, the other 3 are Tuple, Set, and Dictionary, all with different qualities and usage

Q35. How can you create a list in Python?
ans-
to create list 
li = [12,23,34,54,55]

Q36. How can we access the elements in a list?
ans-
list1 = ['physics', 'chemistry', 1997, 2000];
list2 = [1, 2, 3, 4, 5, 6, 7 ];
print "list1[0]: ", list1[0]
print "list2[1:5]: ", list2[1:5]


Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 

Q38. Take a list as an input from the user and find the length of the list.
ans-

# creating an empty list
lst = []
  
# number of elements as input
n = int(input("Enter number of elements : "))
  
# iterating till the range
for i in range(0, n):
    ele = int(input())
  
    lst.append(ele) # adding the element
      
print(lst)

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```
ans-
lst = ["Welcome", "to", "Data", "course"]
lst.insert(3,'Big')
print(lst)

Q40. What is a tuple? How is it different from list?
ans-
A python tuple has the following features - 

Tuples are used to store heterogeneous and homogeneous data.
Tuples are immutable in nature.
Tuples are ordered
An index is used to traverse a tuple.
Tuples are similar to lists. It also preserves the data sequence.
As tuples are immutable, they are faster than the list because they are static.


Q41. How can you create a tuple in Python?
ans-


Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?

Q44. Take a tuple as an input and print the count of elements in it.

Q45. What are sets in Python?

Q46. How can you create a set?

Q47. Create a set and add "iNeuron" in your set.

Q48. Try to add multiple values using add() function.

Q49. How is update() different from add()?

Q50. What is clear() in sets?

Q51. What is frozen set?

Q52. How is frozen set different from set?

Q53. What is union() in sets? Explain via code.

Q54. What is intersection() in sets? Explain via code.

Q55. What is dictionary ibn Python?

Q56. How is dictionary different from all other data structures.
ans- 
 A dictionary has a set of keys and each key has a single associated value. When presented with a key the dictionary will • A dictionary has a set of keys and each key has a single associated value.

Q57. How can we delare a dictionary in Python?
ans-
example of dictionary
var = {1:'ritik',
	2:'kumar'}

Q58. What will the output of the following?
```
var = {}
print(type(var))
```
ans-
it will give output: <class 'dict'>

Q59. How can we add an element in a dictionary?
ans-
We add a new element to the dictionary by using a new key as a subscript and assigning it a value.

Q60. Create a dictionary and access all the values in that dictionary.
ans-
Dict = {1: 'Geeks', 2: 'For', 3: 'Geeks'}
print("\nDictionary with the use of Integer Keys: ")
print(Dict)
  
Dict = {'Name': 'Geeks', 1: [1, 2, 3, 4]}
print("\nDictionary with the use of Mixed Keys: ")
print(Dict

Q61. Create a nested dictionary and access all the element in the inner dictionary.
ans-
people = {1: {'name': 'John', 'age': '27', 'sex': 'Male'},
          2: {'name': 'Marie', 'age': '22', 'sex': 'Female'}}

Q62. What is the use of get() function?
ans-
The get() method returns the value of the item with the specified key.

Q63. What is the use of items() function?
ans- 
The items() method returns a view object. The view object contains the key-value pairs of the dictionary, as tuples in a list. 

Q64. What is the use of pop() function?
ans- The pop() method removes the item at the given index from the list and returns the removed item

Q65. What is the use of popitems() function?
ans-
The popitem() method removes the item that was last inserted into the dictionary

Q66. What is the use of keys() function?
ans-
The keys() method returns a view object. The view object contains the keys of the dictionary, as a list.

Q67. What is the use of values() function?
ans-
The values() method returns a view object. The view object contains the values of the dictionary, as a list. 

Q68. What are loops in Python?
ans-
A for loop in Python is a control flow statement that is used to repeatedly execute a group of statements as long as the condition is satisfied. Such a type of statement is also known as an iterative statement.

Q69. How many type of loop are there in Python?
ans-
 In Python, there are two basic structures for defining loops:

while condition: 
    loop code block 
for something in iterable: 
    loop code block 
but for can also be used when creating a list, dictionary or set with (or by) comprehension

one_list = [x for x in interable] 
There are other specific functions to work with iterable

An iterable is any object that, within a loop, can deliver one element at a time, until all the elements are exhausted (or the loop is interrupted by a break statement).

Python includes several native iterables but the programmer can create their own by using specific instructions provided by the language.

Q70. What is the difference between for and while loops?
ans-
 for loop is used when the number of iterations is known, whereas execution is done in the while loop until the statement in the program is proved wrong

Q71. What is the use of continue statement?
ans-Continue Statement skips the execution of the program block from after the continue statement

Q72. What is the use of break statement?
ans-
The break statement terminates the execution of the nearest enclosing do , for , switch , or while statement in which it appears.

Q73. What is the use of pass statement?
ans-
The pass statement is used as a placeholder for future code. When the pass statement is executed, nothing happens, but you avoid getting an error when empty code is not allowed. Empty code is not allowed in loops, function definitions, class definitions, or in if statements.

Q74. What is the use of range() function?
ans-
The range() function returns a sequence of numbers, starting from 0 by default, and increments by 1 (by default), and stops before a specified number.

Q75. How can you loop over a dictionary?
ans-
In this example, we are using the values() method to print all the values present in the dictionary.
# Python3 code to iterate through all values in a dictionary

statesAndCapitals = {
	'Gujarat': 'Gandhinagar',
	'Maharashtra': 'Mumbai',
	'Rajasthan': 'Jaipur',
	'Bihar': 'Patna'
}

print('List Of given capitals:\n')

# Iterating over values
for capital in statesAndCapitals.values():
	print(capital)



### Coding problems
Q76. Write a Python program to find the factorial of a given number.
ans-
def fact(n):  
    return 1 if (n==1 or n==0) else n * fact(n - 1);  
  
num = 5  
print("Factorial of",num,"is",)  
fact(num))  

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100
ans-
def simple_interest(p,t,r):
    print('The principal is', p)
    print('The time period is', t)
    print('The rate of interest is',r)
     
    si = (p * t * r)/100
     
    print('The Simple Interest is', si)
    return si
     
# Driver code
simple_interest(8, 6, 8)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
ans-
def compound_interest(principle, rate, time):
 
    # Calculates compound interest
    Amount = principle * (pow((1 + rate / 100), time))
    CI = Amount - principle
    print("Compound interest is", CI)
 
 
# Driver Code
compound_interest(10000, 10.25, 5)


Q79. Write a Python program to check if a number is prime or not.
ans-
num =int(input())
if num > 1:
    # Iterate from 2 to n / 2
    for i in range(2, int(num/2)+1):
        # If num is divisible by any number between
        # 2 and n / 2, it is not prime
        if (num % i) == 0:
            print(num, "is not a prime number")
            break
    else:
        print(num, "is a prime number")
else:
    print(num, "is not a prime number")

Q80. Write a Python program to check Armstrong Number.
ans-
# Python program to check if the number is an Armstrong number or not

# take input from the user
num = int(input("Enter a number: "))

# initialize sum
sum = 0

# find the sum of the cube of each digit
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10

# display the result
if num == sum:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")


Q81. Write a Python program to find the n-th Fibonacci Number.
ans-
def solve(n):
   if n <= 2:
      return n - 1
   else:
      return solve(n - 1) + solve(n - 2)

n = 8
print(solve(n))

Q82. Write a Python program to interchange the first and last element in a list.
ans-
def swapList(newList):
    size = len(newList)
     
    # Swapping
    temp = newList[0]
    newList[0] = newList[size - 1]
    newList[size - 1] = temp
     
    return newList
     
# Driver code
newList = [12, 35, 9, 56, 24]
 
print(swapList(newList))


Q83. Write a Python program to swap two elements in a list.
ans-
def swapPositions(list, pos1, pos2):
     
    list[pos1], list[pos2] = list[pos2], list[pos1]
    return list
 
# Driver function
List = [23, 65, 19, 90]
pos1, pos2  = 1, 3
 
print(swapPositions(List, pos1-1, pos2-1))

Q84. Write a Python program to find N largest element from a list.
ans-
def Nmaxelements(list1, N):
    final_list = []
 
    for i in range(0, N):
        max1 = 0
         
        for j in range(len(list1)):    
            if list1[j] > max1:
                max1 = list1[j];
                 
        list1.remove(max1);
        final_list.append(max1)
         
    print(final_list)
 
# Driver code
list1 = [2, 6, 41, 85, 0, 3, 7, 6, 10]
N = 2
 
# Calling the function
Nmaxelements(list1, N)

Q85. Write a Python program to find cumulative sum of a list.
ans-

# Python code to get the Cumulative sum of a list
def Cumulative(lists):
    cu_list = []
    length = len(lists)
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)]
    return cu_list[1:]
 
# Driver Code
lists = [10, 20, 30, 40, 50]
print (Cumulative(lists))


Q86. Write a Python program to check if a string is palindrome or not.
ans-
# function which return reverse of a string

def isPalindrome(s):
	return s == s[::-1]


# Driver code
s = "malayalam"
ans = isPalindrome(s)

if ans:
	print("Yes")
else:
	print("No")



Q87. Write a Python program to remove i'th element from a string.
ans-
# Python3 program for removing i-th
# indexed character from a string

# Removes character at index i
def remove(string, i):

	# Characters before the i-th indexed
	# is stored in a variable a
	a = string[ : i]
	
	# Characters after the nth indexed
	# is stored in a variable b
	b = string[i + 1: ]
	
	# Returning string after removing
	# nth indexed character.
	return a + b
	
# Driver Code
if __name__ == '__main__':
	
	string = "geeksFORgeeks"
	
	# Remove nth index element
	i = 5
	
	# Print the new string
	print(remove(string, i))


Q88. Write a Python program to check if a substring is present in a given string.
ans-
string = "geeks for geeks"  # or string=input() -> taking input from the user
substring = "geeks"  # or substring=input()
 
# splitting words in a given string
s = string.split()
 
# checking condition
# if substring is present in the given string then it gives output as yes
if substring in s:
    print("yes")
else:
    print("no")

Q89. Write a Python program to find words which are greater than given length k.
ans-
def string_k(k, str):
     
    # create the empty string
    string = []
     
    # split the string where space is comes
    text = str.split(" ")
     
    # iterate the loop till every substring
    for x in text:
         
        # if length of current sub string
        # is greater than k then
        if len(x) > k:
             
            # append this sub string in
            # string list
            string.append(x)
             
     # return string list
    return string
 
 
# Driver Program    
k = 3
str ="geek for geeks"
print(string_k(k, str))

Q90. Write a Python program to extract unquire dictionary values.
ans-
test_dict = {'gfg': [5, 6, 7, 8],
             'is': [10, 11, 7, 5],
             'best': [6, 12, 10, 8],
             'for': [1, 2, 5]}
 
# printing original dictionary
print("The original dictionary is : " + str(test_dict))
 
# Extract Unique values dictionary values
# Using set comprehension + values() + sorted()
res = list(sorted({ele for val in test_dict.values() for ele in val}))
 
# printing result
print("The unique values list is : " + str(res))

Q91. Write a Python program to merge two dictionary.

Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```

Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```

Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```
ans-

Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```
ans-

def pattern1(n):
  for i in range(n):
    for j in range(0,i+1):
      print('*',end=' ')
    print()

pattern1(5)

Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```
ans-
def pattern2(n):
  n=5;i=0
  while(i<=n):
    print(" " * (n - i) +"*" * i)
    i+=1

pattern2(5)

Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```
ans-
# Python 3.x code to demonstrate star pattern

# Function to demonstrate printing pattern triangle
def triangle(n):
	
	# number of spaces
	k = n - 1

	# outer loop to handle number of rows
	for i in range(0, n):
	
		# inner loop to handle number spaces
		# values changing acc. to requirement
		for j in range(0, k):
			print(end=" ")
	
		# decrementing k after each loop
		k = k - 1
	
		# inner loop to handle number of columns
		# values changing acc. to outer loop
		for j in range(0, i+1):
		
			# printing stars
			print("* ", end="")
	
		# ending line after each row
		print("\r")

# Driver Code
n = 5
triangle(n)


Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```
ans-
# Python 3.x code to demonstrate star pattern

# Function to demonstrate printing pattern of numbers
def numpat(n):
	
	# initialising starting number
	num = 1

	# outer loop to handle number of rows
	for i in range(0, n):
	
		# re assigning num
		num = 1
	
		# inner loop to handle number of columns
			# values changing acc. to outer loop
		for j in range(0, i+1):
		
				# printing number
			print(num, end=" ")
		
			# incrementing number at each column
			num = num + 1
	
		# ending line after each row
		print("\r")

# Driver code
n = 5
numpat(n)

Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```
ans-
# Python 3.x code to demonstrate star pattern

# Function to demonstrate printing pattern of alphabets
def alphapat(n):
	
	# initializing value corresponding to 'A'
	# ASCII value
	num = 65

	# outer loop to handle number of rows
	# 5 in this case
	for i in range(0, n):
	
		# inner loop to handle number of columns
		# values changing acc. to outer loop
		for j in range(0, i+1):
		
			# explicitly converting to char
			ch = chr(num)
		
			# printing char value
			print(ch, end=" ")
	
		# incrementing number
		num = num + 1
	
		# ending line after each row
		print("\r")

# Driver Code
n = 5
alphapat(n)
